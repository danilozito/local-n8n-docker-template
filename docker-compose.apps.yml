volumes:
  n8n_data:
  nginx_ssl:
  code_server_data:

networks:
  n8n_network:
    external: true

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    networks:
      - n8n_network
    expose:
      - "5678"
    environment:
      - N8N_HOST=${N8N_HOST:-192.168.0.49}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - N8N_PATH=/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - N8N_EDITOR_BASE_URL=https://${N8N_HOST:-192.168.0.49}
      - N8N_HOST_WEBHOOK_URL=https://${N8N_HOST:-192.168.0.49}/webhook/
      - DB_POSTGRESDB_SCHEMA=public
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - ssl-generator

  code-server:
    image: codercom/code-server:latest
    container_name: code-server
    restart: always
    networks:
      - n8n_network
    ports:
      - "8080:8080"
    volumes:
      - code_server_data:/home/coder
      - ./code-server-project:/home/coder/workspace
    environment:
      - PASSWORD=codeserver!2025
      - DOCKER_USER=coder

  ssl-generator:
    build:
      context: ./nginx
    image: ssl-generator
    command: ["generate-ssl.sh", "192.168.0.49"]
    volumes:
      - nginx_ssl:/ssl
    networks:
      - n8n_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    networks:
      - n8n_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_ssl:/etc/nginx/ssl
    depends_on:
      - n8n
      - ssl-generator 